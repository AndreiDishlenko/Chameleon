syntax = "proto3";

option java_multiple_files = true;
package com.programika.rro.ws.chk;


message Check {
    string rro_fn = 1;
    int64 date_time = 2;
    bytes check_sign = 3;
    int32 local_number = 4;
    enum Type {
        UNKNOWN = 0;
        CHK = 1;
        ZREPORT = 2;
        SERVICECHK = 3;
    }
    Type check_type = 5;
    string id_offline = 6;
    string id_cancel = 7;

}

message CheckRequest {
    bytes rro_fn_sign = 3;
}
message CheckRequestId {
    string id = 1;
    bytes rro_fn_sign = 2;
}

message CheckResponse {
    string id = 1;
    enum Status {
        UNKNOWN = 0;
        OK = 1;
        ERROR_VEREFY = -1;
        ERROR_CHECK = -2;
        ERROR_SAVE = -3;
        ERROR_UNKNOWN = -4;
        ERROR_TYPE = -5;
        ERROR_NOT_PREV_ZREPORT = -6;
        ERROR_XML = -7;
        ERROR_XML_DATE = -8;
        ERROR_XML_CHK = -9;
        ERROR_XML_ZREPORT = -10;
        ERROR_OFFLINE_168 = -11;
        ERROR_BAD_HASH_PREV = -12;
        ERROR_NOT_REGISTERED_RRO = -13;
        ERROR_NOT_REGISTERED_SIGNER = -14;
        ERROR_NOT_OPEN_SHIFT = -15;
        ERROR_OFFLINE_ID = -16;
    }
    Status status = 2;
    bytes id_sign = 3;
    bytes data_sign = 4;
    string error_message = 5;
}
message StatusResponse {
    bool open_shift = 1;
    bool online = 2;
    string last_signer = 3;
    enum Status {
        UNKNOWN = 0;
        OK = 1;
        ERROR_VEREFY = -1;
        ERROR_CHECK = -2;
        ERROR_UNKNOWN = -4;
        ERROR_NOT_REGISTERED_RRO = -13;
        ERROR_NOT_REGISTERED_SIGNER = -14;
    }
    Status status = 4;
    string error_message = 5;
}

message RroInfoResponse {
    enum Status {
        UNKNOWN = 0;
        OK = 1;
        ERROR_VEREFY = -1;
        ERROR_CHECK = -2;
        ERROR_UNKNOWN = -4;
        ERROR_NOT_REGISTERED_RRO = -13;
        ERROR_NOT_REGISTERED_SIGNER = -14;
    }
    Status status = 1; // Статус відповіді
    int32 status_rro = 2; // Статус ПРРО
    bool open_shift = 3; // Статус зміни
    bool online = 4; // Стан ПРРО
    string last_signer = 5; // Останній підписант
    string name = 6; // Назва
    string name_to = 7; // Назва ТО
    string addr = 8; // Адреса ТО
    bool single_tax = 9; // Платник єдиного податку
    bool offline_allowed = 10; // Дозволено роботу в офлайн режимі
    int32 add_num = 11; // Додаткова кількисть офлайн номерів
    string pn = 12; // Податковий номер платника ПДВ

    message Operator {
        string serial = 1; // publicKeyId
        int32 status = 2; // Статус
        bool senior = 3; // Старший касир
        string isname = 4; // ПІБ
    }
    repeated Operator operators = 13; // Касири
    string tins = 14; // Податковий номер платника
    int32 lnum = 15; // Локальний номер каси
    string name_pay = 16; // Назва платника
}


service ChkIncomeService {
    rpc sendChk (Check) returns (CheckResponse);
    rpc sendChkV2 (Check) returns (CheckResponse);
    rpc lastChk (CheckRequest) returns (CheckResponse);
    rpc ping (Check) returns (CheckResponse);
    rpc delLastChk (CheckRequest) returns (CheckResponse);
    rpc delLastChkId (CheckRequestId) returns (CheckResponse);
    rpc statusRro (CheckRequest) returns (StatusResponse);
    rpc infoRro (CheckRequest) returns (RroInfoResponse);
}